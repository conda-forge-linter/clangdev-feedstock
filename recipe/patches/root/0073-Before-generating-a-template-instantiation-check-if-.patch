From 533cd2c14313a3f17ab5836aef8c411bdc25a77d Mon Sep 17 00:00:00 2001
From: Vassil Vassilev <vvasilev@cern.ch>
Date: Mon, 9 Sep 2013 11:32:31 +0200
Subject: [PATCH 073/107] Before generating a template instantiation check if
 we can get externally.

This is useful when we have template specializations/instantiations in rootmap
files. This means that the template specialization has to be loaded from the
given library and not automatically generated by the template instantiatior.
---
 lib/Sema/SemaTemplateInstantiate.cpp | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/lib/Sema/SemaTemplateInstantiate.cpp b/lib/Sema/SemaTemplateInstantiate.cpp
index 5b8fb267c3..284e8f4bc6 100644
--- a/lib/Sema/SemaTemplateInstantiate.cpp
+++ b/lib/Sema/SemaTemplateInstantiate.cpp
@@ -2556,6 +2556,16 @@ getPatternForClassTemplateSpecialization(
     }
     Pattern = PartialSpec;
   } else {
+    //   -- If no matches are found, the instantiation is generated
+    //      from the primary template.
+
+    // Try first to get it externally:
+    if(S.getExternalSource()) {
+      S.getExternalSource()->CompleteType(ClassTemplateSpec);
+      if (ClassTemplateSpec->getDefinition())
+        return ClassTemplateSpec;
+    }
+
     ClassTemplateDecl *Template = ClassTemplateSpec->getSpecializedTemplate();
     while (Template->getInstantiatedFromMemberTemplate()) {
       // If we've found an explicit specialization of this class template,
-- 
2.35.1

